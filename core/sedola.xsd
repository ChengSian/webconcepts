<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd">
        <xs:annotation>
            <xs:documentation>Get access to the xml: attribute groups that are in the XML namespace for XML itself.</xs:documentation>
        </xs:annotation>
    </xs:import>
    <xs:element name="service">
        <xs:annotation>
            <xs:documentation>A service in Sedola is defined as an inventory of used concepts, which are listed in the Sedola description. The list is unordered. Other services can be referenced by including their Sedola description.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="title" minOccurs="1" maxOccurs="unbounded"/>
                <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="include" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>Sedola allows inclusions which reference other Sedola descriptions and include their description as if it were copied into the referencing description. Includes can be nested. Includes must not be circular, but it is possible that inclusions form an acyclic graph (and not just a tree), so Sedola implementations have to make sure that inclusion processing correctly handles this situation.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                        <xs:attribute name="href" type="xs:anyURI" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="mediatype">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:element name="document" minOccurs="1" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:group ref="title" minOccurs="0" maxOccurs="unbounded"/>
                                            <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
                                        </xs:sequence>
                                        <xs:attribute ref="xml:id" use="required"/>
                                        <xs:attribute name="vocabularies" use="optional">
                                            <xs:simpleType>
                                                <xs:list itemType="xs:token"/>
                                            </xs:simpleType>
                                        </xs:attribute>
                                    </xs:complexType>
                                </xs:element>
                                <xs:element ref="link" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                            <xs:attribute ref="xml:id" use="required"/>
                            <xs:attribute name="type" type="mediaTypeType" use="required"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="profile">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="title" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                            <xs:attribute ref="xml:id" use="required"/>
                            <xs:attribute name="id" type="xs:anyURI" use="required">
                                <xs:annotation>
                                    <xs:documentation>The profile URI (which does not have to be dereferencable and thus uses @id instead of @href).</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element ref="link"/>
                    <xs:element name="uri-parameter">
                        <xs:complexType>
                            <xs:attribute ref="xml:id" use="required"/>
                            <xs:attribute name="name" type="xs:anyURI" use="required"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="problem-type">
                        <xs:complexType>
                            <xs:attribute ref="xml:id" use="required"/>
                            <xs:attribute name="name" type="xs:anyURI" use="required"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="vocabulary">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="title" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                            <xs:attribute ref="xml:id" use="required"/>
                            <xs:attribute name="id" type="xs:token" use="required"/>
                            <xs:attribute name="type" use="optional">
                                <xs:simpleType>
                                    <xs:union>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:token">
                                                <xs:enumeration value="xmlns"/>
                                                <xs:enumeration value="FPI"/>
                                            </xs:restriction>
                                        </xs:simpleType>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:token"/>
                                        </xs:simpleType>
                                    </xs:union>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="http-header">
                        <xs:complexType>
                            <xs:sequence>
                                <!-- HTTP Headers need no title, their name should serve as their title. -->
                                <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                            <xs:attribute ref="xml:id" use="required"/>
                            <xs:attribute name="name" type="xs:token" use="required">
                                <xs:annotation>
                                    <xs:documentation>The name of the HTTP header field.</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="type" use="optional">
                                <xs:simpleType>
                                    <xs:restriction base="xs:token">
                                        <xs:enumeration value="general"/>
                                        <xs:enumeration value="request"/>
                                        <xs:enumeration value="response"/>
                                        <xs:enumeration value="entity"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="link">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="title" minOccurs="0" maxOccurs="unbounded"/>
                <xs:group ref="descriptions" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute ref="xml:id" use="required"/>
            <xs:attribute name="rel" use="optional">
                <xs:annotation>
                    <xs:documentation source="http://tools.ietf.org/html/rfc5988#section-4">Link relations must be names or URIs for RFC 5988 links. Links also can be encoded differently (for example in XML element names), in which case they don't have a @relation.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:pattern value="[a-z][a-z0-9\.\-]+">
                            <xs:annotation>
                                <xs:documentation source="http://tools.ietf.org/html/rfc5988#section-5">reg-rel-type = LOALPHA *( LOALPHA | DIGIT | "." | "-" )</xs:documentation>
                            </xs:annotation>
                        </xs:pattern>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:group name="title">
        <xs:sequence>
            <xs:element name="title">
                <xs:complexType mixed="true">
                    <xs:attribute name="short" type="xs:string" use="optional"/>
                    <xs:attribute ref="xml:lang" use="optional"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <xs:group name="descriptions">
        <xs:annotation>
            <xs:documentation>This is a copy of the "description" group as it is defined and used in XSD's schema for schemas.</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="appinfo" id="appinfo">
                <xs:complexType mixed="true">
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:any processContents="lax"/>
                    </xs:sequence>
                    <xs:attribute name="source" type="xs:anyURI"/>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="documentation" id="documentation">
                <xs:complexType mixed="true">
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:any processContents="lax"/>
                    </xs:sequence>
                    <xs:attribute name="source" type="xs:anyURI"/>
                    <xs:attribute ref="xml:lang"/>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
    <xs:simpleType name="mediaTypeType">
        <xs:annotation>
            <xs:documentation>This is a type for representing media type names. It uses the media type name syntax from RFC 4288.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="[a-zA-Z0-9!#$%^&amp;\*_\-\+{}\|'\.`~]+/[a-zA-Z0-9!#$%^&amp;\*_\-\+{}\|'\.`~]+"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
