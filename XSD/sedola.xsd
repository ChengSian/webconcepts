<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1"
    targetNamespace="http://github.com/dret/sedola" xmlns:sedola="http://github.com/dret/sedola">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace"
        schemaLocation="http://www.w3.org/2001/xml.xsd">
        <xs:annotation>
            <xs:documentation>Get access to the xml: attribute groups that are in the XML namespace for XML itself.</xs:documentation>
        </xs:annotation>
    </xs:import>
    <xs:element name="service">
        <xs:annotation>
            <xs:documentation>A service in Sedola is defined as an inventory of used concepts, which are listed in the Sedola description. The list is unordered. Other services can be referenced by including their Sedola description.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="sedola:title" minOccurs="1"/>
                <xs:group ref="sedola:descriptions" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="import" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>Sedola allows inclusions which reference other Sedola descriptions and import their description as if it were copied into the referencing description. Imports can be nested. Imports must not be circular, but it is possible that inclusions form an acyclic graph (and not just a tree), so Sedola implementations have to make sure that inclusion processing correctly handles this situation.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:group ref="sedola:descriptions" minOccurs="0" maxOccurs="unbounded"
                            />
                        </xs:sequence>
                        <xs:attribute name="href" type="xs:anyURI" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="mediatype">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="sedola:descriptions" minOccurs="0"
                                    maxOccurs="unbounded"/>
                                <xs:element name="document" minOccurs="1" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:sequence>
                                            <xs:group ref="sedola:title" minOccurs="0"
                                                maxOccurs="unbounded"/>
                                            <xs:group ref="sedola:descriptions" minOccurs="0"
                                                maxOccurs="unbounded"/>
                                        </xs:sequence>
                                        <xs:attribute ref="xml:id" use="optional"/>
                                        <xs:attribute name="vocabularies" use="optional">
                                            <xs:simpleType>
                                                <xs:list itemType="xs:token"/>
                                            </xs:simpleType>
                                        </xs:attribute>
                                        <xs:attribute name="profile" type="xs:NMTOKEN"
                                            use="optional">
                                            <xs:annotation>
                                                <xs:documentation>A @profile attribute indicates that a media type's document is using a profile according to RFC 6906. It must refer to the ID of a profile that is declared in a profile element.</xs:documentation>
                                            </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="ref" type="xs:NMTOKEN" use="optional"/>
                                        <xs:assert test="count(@xml:id | @ref) = 1">
                                            <xs:annotation>
                                                <xs:documentation>A document in a media type is either defined (when the media type itself is defined), or it is referenced in the media type definition, when the media type is referenced.</xs:documentation>
                                            </xs:annotation>
                                        </xs:assert>
                                    </xs:complexType>
                                </xs:element>
                                <xs:element ref="sedola:link" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                            <xs:attribute name="def" type="sedola:mediaTypeType" use="optional"/>
                            <xs:attribute name="ref" type="sedola:mediaTypeType" use="optional"/>
                            <xs:assert test="count(@def | @ref) = 1">
                                <xs:annotation>
                                    <xs:documentation>Media types are either defined or referenced; @def and @ref are mutually exclusive.</xs:documentation>
                                </xs:annotation>
                            </xs:assert>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="profile">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="sedola:title" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:group ref="sedola:descriptions" minOccurs="0"
                                    maxOccurs="unbounded"/>
                            </xs:sequence>
                            <xs:attribute ref="xml:id" use="required"/>
                            <xs:attribute name="id" type="xs:anyURI" use="required">
                                <xs:annotation>
                                    <xs:documentation>The profile URI (which does not have to be dereferencable and thus uses @id instead of @href).</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element ref="sedola:link"/>
                    <xs:element name="vocabulary">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="sedola:title" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:group ref="sedola:descriptions" minOccurs="0"
                                    maxOccurs="unbounded"/>
                            </xs:sequence>
                            <xs:attribute ref="xml:id" use="optional"/>
                            <xs:attribute name="id" type="xs:string" use="optional"/>
                            <xs:attribute name="def" type="xs:token"/>
                            <xs:attribute name="type" use="optional">
                                <xs:simpleType>
                                    <xs:union>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:token">
                                                <xs:enumeration value="xmlns"/>
                                                <xs:enumeration value="FPI"/>
                                            </xs:restriction>
                                        </xs:simpleType>
                                        <xs:simpleType>
                                            <xs:restriction base="xs:token"/>
                                        </xs:simpleType>
                                    </xs:union>
                                </xs:simpleType>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="http-header">
                        <xs:complexType>
                            <xs:sequence>
                                <!-- HTTP Headers need no title, their name should serve as their title. -->
                                <xs:group ref="sedola:descriptions" minOccurs="0"
                                    maxOccurs="unbounded"/>
                                <xs:element minOccurs="0" ref="sedola:ABNF"/>
                            </xs:sequence>
                            <xs:attribute name="def" use="optional" type="sedola:httpHeaderType"/>
                            <xs:attribute name="ref" use="optional" type="sedola:httpHeaderType"/>
                            <xs:assert test="count(@def | @ref) = 1">
                                <xs:annotation>
                                    <xs:documentation>Media types are either defined or referenced; @def and @ref are mutually exclusive.</xs:documentation>
                                </xs:annotation>
                            </xs:assert>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="id" type="xs:anyURI" use="optional"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="link">
        <xs:complexType>
            <xs:group ref="sedola:descriptions" minOccurs="0" maxOccurs="unbounded"/>
            <xs:attribute ref="xml:id" use="optional"/>
            <xs:attribute name="def" type="sedola:linkRelationType">
                <xs:annotation>
                    <xs:documentation source="http://tools.ietf.org/html/rfc5988#section-4">Links can be based on relations, or defined by selectors. Link relations must be names or URIs for RFC 5988 links. Links also can be encoded differently (for example in XML element names), in which case they have a selector.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="select">
                <xs:annotation>
                    <xs:documentation>Links can be selected, and the @selector attribute is used to specify the expression language of the @select attribute.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="selector">
                <xs:annotation>
                    <xs:documentation>Determines the expression language of the @select attribute.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:token">
                        <xs:enumeration value="xpath1"/>
                        <xs:enumeration value="xpath2"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ref" type="sedola:linkRelationType">
                <xs:annotation>
                    <xs:documentation>Used to reference an existing and included link relation, that is reused. The documentation should describe how the link is used specifically in the context where it is referenced.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:group name="title">
        <xs:sequence>
            <xs:element name="title">
                <xs:complexType mixed="true">
                    <xs:attribute name="short" type="xs:string" use="optional"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:group>
    <xs:group name="descriptions">
        <xs:annotation>
            <xs:documentation>This is a copy of the "description" group as it is defined and used in XSD's schema for schemas.</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="appinfo" id="appinfo">
                <xs:complexType mixed="true">
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:any processContents="lax"/>
                    </xs:sequence>
                    <xs:attribute name="source" type="xs:anyURI"/>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="documentation" id="documentation">
                <xs:complexType mixed="true">
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:any processContents="lax"/>
                    </xs:sequence>
                    <xs:attribute name="source" type="xs:anyURI"/>
                    <xs:attribute ref="xml:lang"/>
                    <xs:anyAttribute namespace="##other" processContents="lax"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
    <xs:simpleType name="mediaTypeType">
        <xs:annotation>
            <xs:documentation>This is a type for representing media type names. It uses the media type name syntax from RFC 4288.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:pattern value="[a-zA-Z0-9!#$&amp;\.\+\-^_]+/[a-zA-Z0-9!#$&amp;\.\+\-^_]+">
                <xs:annotation>
                    <xs:documentation source="http://tools.ietf.org/html/rfc4288#section-4.2">(sub)type-name = ALPHA / DIGIT / "!" / "#" / "$" / "&amp;" / "." / "+" / "-" / "^" / "_"</xs:documentation>
                </xs:annotation>
            </xs:pattern>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="httpHeaderType">
        <xs:restriction base="xs:token">
            <xs:pattern value="[!#$%&amp;'\*\+\-\.\^_`\|~0-9a-zA-Z]+">
                <xs:annotation>
                    <xs:documentation source="http://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging#section-3.2">field-name = 1*( "!" / "#" / "$" / "%" / "&amp;" / "'" / "*" / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~" / DIGIT / ALPHA</xs:documentation>
                </xs:annotation>
            </xs:pattern>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="linkRelationType">
        <xs:union memberTypes="xs:anyURI">
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="[a-z][a-z0-9\.\-]+">
                        <xs:annotation>
                            <xs:documentation source="http://tools.ietf.org/html/rfc5988#section-5">reg-rel-type = LOALPHA *( LOALPHA | DIGIT | "." | "-" )</xs:documentation>
                        </xs:annotation>
                    </xs:pattern>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>
    <xs:element name="ABNF">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="src" type="xs:anyURI" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
</xs:schema>
